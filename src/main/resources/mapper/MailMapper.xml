<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ncu.mailmanage.dao.MailMapper" >
  <resultMap id="BaseResultMap" type="com.ncu.mailmanage.pojo.Mail" >
    <constructor >
      <idArg column="mail_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="send_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ncu.mailmanage.pojo.Mail" >
    <constructor >
      <idArg column="mail_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="send_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="body" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <resultMap id="MailWithUser" type="com.ncu.mailmanage.vo.MailVo">
    <id column="m_id" property="mailId"/>
    <result column="m_title" property="title"/>
    <result column="m_body" property="body"/>
    <result column="m_send_time" property="sendTime"/>
    <result column="u_sender" property="sender"/>
    <result column="u_receiver" property="receiver"/>
  </resultMap>

  <sql id="Base_Column_List" >
    mail_id, title, send_time
  </sql>
  <sql id="Blob_Column_List" >
    body
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_mail
    where mail_id = #{mailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_mail
    where mail_id = #{mailId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ncu.mailmanage.pojo.Mail" >
    insert into t_mail (mail_id, title, send_time, 
      body)
    values (#{mailId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{body,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ncu.mailmanage.pojo.Mail" keyProperty="mailId" useGeneratedKeys="true">
    insert into t_mail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mailId != null" >
        mail_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="body != null" >
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mailId != null" >
        #{mailId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="body != null" >
        #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ncu.mailmanage.pojo.Mail" >
    update t_mail
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mail_id = #{mailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ncu.mailmanage.pojo.Mail" >
    update t_mail
    set title = #{title,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      body = #{body,jdbcType=LONGVARCHAR}
    where mail_id = #{mailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ncu.mailmanage.pojo.Mail" >
    update t_mail
    set title = #{title,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP}
    where mail_id = #{mailId,jdbcType=BIGINT}
  </update>
  
  
  <select id="listAll" resultMap="MailWithUser">
    select
    m.mail_id as m_id, m.title as m_title, m.body as m_body, m.send_time as m_send_time ,
    u1.`name` as 'u_sender', u2.`name` as 'u_receiver'
    from t_mail m left join t_sender_mail sm on m.mail_id = sm.mail_id
    left join t_user u1 on sm.user_id = u1.user_id
    left join t_receiver_mail rm on rm.mail_id = m.mail_id
    left join t_user u2 on rm.user_id = u2.user_id
    WHERE sm.state_id != 3
  </select>

    <select id="listByCondition" resultMap="MailWithUser">
    select
    m.mail_id as m_id, m.title as m_title, m.body as m_body, m.send_time as m_send_time ,
    u1.`name` as 'u_sender', u2.`name` as 'u_receiver'
    from t_mail m left join t_sender_mail sm on m.mail_id = sm.mail_id
    left join t_user u1 on sm.user_id = u1.user_id
    left join t_receiver_mail rm on rm.mail_id = m.mail_id
    left join t_user u2 on rm.user_id = u2.user_id
    <where>
        sm.state_id != 3
        <if test="title != null">
            and m.title like #{title}
        </if>
        <if test="sender != null">
            and u1.name = #{sender}
        </if>
        <if test="receiver != null">
            and u2.name = #{receiver}
        </if>
    </where>

  </select>

  <insert id="insertSendMail" parameterType="java.lang.Long">
    insert into t_sender_mail ( user_id,mail_id,state_id
      )
    values (#{userId,jdbcType=BIGINT}, #{mailId,jdbcType=BIGINT}, 0
      )
  </insert>

  <insert id="insertReceiveMail" parameterType="java.lang.Long">
    insert into t_receiver_mail ( user_id,mail_id,read_flag,state_id
      )
    values (#{userId,jdbcType=BIGINT}, #{mailId,jdbcType=BIGINT},0,0
      )
  </insert>

  <select id="listByReceiver" parameterType="java.lang.Long" resultMap="MailWithUser">
    select
    m.mail_id as m_id, m.title as m_title, m.body as m_body, m.send_time as m_send_time ,
    u1.`name` as 'u_sender', u2.`name` as 'u_receiver'
    from t_mail m left join t_sender_mail sm on m.mail_id = sm.mail_id
    left join t_user u1 on sm.user_id = u1.user_id
    left join t_receiver_mail rm on rm.mail_id = m.mail_id
    left join t_user u2 on rm.user_id = u2.user_id
    WHERE rm.state_id = 0 and rm.user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="findSenderByMailId" parameterType="java.lang.Long" resultType="java.lang.String">
    select u.name
    from t_sender_mail s left join t_user u on s.user_id = u.user_id
    where s.mail_id = #{mailId,jdbcType=BIGINT}
  </select>

  <update id="updateReceiveMailState" parameterType="java.lang.Long">
    update t_receiver_mail rm
    set rm.state_id=#{stateId,jdbcType=SMALLINT}
    where rm.mail_id=#{mailId,jdbcType=BIGINT}
  </update>

  <insert id="insertAttachmentSelective" parameterType="com.ncu.mailmanage.pojo.Attachment" keyProperty="attId" useGeneratedKeys="true">
    insert into t_attachment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="attId != null" >
        att_id,
      </if>
      <if test="attName != null" >
        att_name,
      </if>
      <if test="downloadUrl != null" >
        download_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="attId != null" >
        #{attId,jdbcType=BIGINT},
      </if>
      <if test="attName != null" >
        #{attName,jdbcType=VARCHAR},
      </if>
      <if test="downloadUrl != null" >
        #{downloadUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <insert id="insertAttachmentMail" parameterType="java.lang.Long">
    insert into t_mail_att (mail_id,att_id
      )
    values (#{mailId,jdbcType=BIGINT}, #{attId,jdbcType=BIGINT}
      )
  </insert>

</mapper>